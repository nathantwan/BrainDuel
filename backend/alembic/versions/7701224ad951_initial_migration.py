"""Initial migration

Revision ID: 7701224ad951
Revises: 
Create Date: 2025-06-04 20:24:47.827398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7701224ad951'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('profile_picture_url', sa.Text(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('battles_won', sa.Integer(), nullable=True),
    sa.Column('battles_lost', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('class_folders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('course_code', sa.String(length=50), nullable=True),
    sa.Column('university_name', sa.String(length=255), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('question_count', sa.Integer(), nullable=True),
    sa.Column('total_downloads', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='unique_user_folder_name')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('achievement_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'achievement_type', 'achievement_name', name='unique_user_achievement')
    )
    op.create_table('battles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('challenger_id', sa.UUID(), nullable=False),
    sa.Column('opponent_id', sa.UUID(), nullable=False),
    sa.Column('class_folder_id', sa.UUID(), nullable=False),
    sa.Column('battle_status', sa.String(length=20), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('time_limit_seconds', sa.Integer(), nullable=True),
    sa.Column('challenger_score', sa.Integer(), nullable=True),
    sa.Column('opponent_score', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.UUID(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('challenger_id != opponent_id', name='different_battle_participants'),
    sa.ForeignKeyConstraint(['challenger_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['class_folder_id'], ['class_folders.id'], ),
    sa.ForeignKeyConstraint(['opponent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('class_folder_id', sa.UUID(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('topic', sa.String(length=255), nullable=True),
    sa.Column('correct_answer', sa.Text(), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('points_value', sa.Integer(), nullable=True),
    sa.Column('times_used', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['class_folder_id'], ['class_folders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temp_notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('class_folder_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), server_default=sa.text("NOW() + INTERVAL '24 hours'"), nullable=True),
    sa.ForeignKeyConstraint(['class_folder_id'], ['class_folders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_folder_stats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('class_folder_id', sa.UUID(), nullable=False),
    sa.Column('questions_answered', sa.Integer(), nullable=True),
    sa.Column('questions_correct', sa.Integer(), nullable=True),
    sa.Column('total_points_earned', sa.Integer(), nullable=True),
    sa.Column('best_streak', sa.Integer(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('average_time_per_question', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['class_folder_id'], ['class_folders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'class_folder_id', name='unique_user_folder_stats')
    )
    op.create_table('battle_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('battle_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_answer', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('time_taken_seconds', sa.Integer(), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['battle_id'], ['battles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('battle_id', 'question_id', 'user_id', name='unique_battle_question_response')
    )
    op.create_table('question_options',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('option_letter', sa.String(length=1), nullable=False),
    sa.Column('option_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'option_letter', name='unique_question_option')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('question_options')
    op.drop_table('battle_responses')
    op.drop_table('user_folder_stats')
    op.drop_table('temp_notes')
    op.drop_table('questions')
    op.drop_table('battles')
    op.drop_table('user_achievements')
    op.drop_table('class_folders')
    op.drop_table('users')
    # ### end Alembic commands ###
